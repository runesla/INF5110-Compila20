<project name="Compila20" default="menu" basedir=".">

	<!-- /////////////////////////////////////////////// DISPLAY MENU //////////////////////////////////////////////-->

	<target name="menu" >
		<echo>Targets                           </echo>
		<echo>clean                		- Cleans up the project</echo>
		<echo>generate				- Generate parser for CMP20</echo>
		<echo>compile				- Compile Java files for CMP20</echo>
		<echo>build				- Build CMP20</echo>
		<echo>compile-test 			- Compile for testprograms</echo>
		<echo>run-test 				- Run tests</echo>
		<echo>compile-runme 			- Compile for testprogram RunMe</echo>
		<echo>list-runme  			- List RunMe</echo>
		<echo>run-runme 				- Run RunMe</echo>
	</target>

	<!-- ////////////////////////////////////////////////// SETUP //////////////////////////////////////////////////-->

	<!-- Path definitions -->
	<path id="path-cup">
		<pathelement location="./lib/java-cup-11a.jar"/>
		<pathelement location="./lib/JFlex.jar"/>
	</path>
	<path id="path-run">
		<path refid="path-cup"/>
		<pathelement location="build/classes" />
	</path>

	<!-- Task definitions -->
	<taskdef classname="JFlex.anttask.JFlexTask" name="jflex" classpathref="path-cup" classpath="./lib/JFlex.jar" />
	<taskdef classname="java_cup.anttask.CUPTask" name="cup" classpathref="path-cup" classpath="./lib/java-cup-11a.jar" />

	<!-- Target definitions -->
	<target name="init">

		<!-- Directories and files that exist. -->
		<property name="dir.base" value="${basedir}"/>
		<property name="dir.build" value="${dir.base}/build"/>
		<property name="dir.src" value="${dir.base}/src"/>
		<property name="dir.desc" value="${dir.base}/desc"/>
		<property name="dir.tests" value="${dir.base}/tests"/>
		<property name="dir.output" value="${dir.base}/output"/>

		<!-- Directories and files to be created. -->
		<property name="dir.classes" value="${dir.build}/classes"/>
	</target>

	<!-- ///////////////////////////////////////////////// TARGETS /////////////////////////////////////////////////-->

	<!-- Clean directory -->
	<target name="clean" depends="init">
		<delete includeemptydirs="true">
			<fileset dir="${dir.build}" includes="**/*"/>
		</delete>
		<delete>
			<fileset dir="${dir.src}/parser" includes="**/*.java"/>
		</delete>


		<!--<delete file="${dir.src}/parser/Lexer.java"/>
		<delete file="${dir.src}/parser/parser.java"/>
		<delete file="${dir.src}/parser/sym.java"/>-->
	</target>

	<!-- Create directories -->
	<target name="mkdir" depends="init">
		<mkdir dir="${dir.classes}"/>
	</target>
	
	<!-- Generate scanner and parser -->
	<target name="generate" depends="init, mkdir">
		<jflex file="${dir.src}/grammars/compila.lex" destdir="src" />
		<cup srcfile="${dir.src}/grammars/compila.cup" destdir="src" interface="true" />
	</target>
	
	<!-- Compile -->
	<target name="compile" depends="generate">
		<javac includeantruntime="false" srcdir="${dir.src}" destdir="${dir.classes}" debug="true"
			   includes="**/*.java" classpathref="path-cup" /> <!-- sourcepath="${dir.src}"-->
	</target>

	<!-- Main target -->
	<target name="build" depends="compile" />

	<!-- Compile test classes -->
	<target name="compile-test" depends="generate">
		<javac srcdir="${dir.src}" destdir="${dir.classes}" debug="true"
			   includes="test/*.java" classpathref="path-cup" />
	</target>

	<!-- Run tests -->
	<target name="run-test" depends="compile-test">
		<java classname="test.Tester" classpathref="path-run">
			<arg value="tests"/>
		</java>
	</target>

	<!-- Run compiler on example RunMe -->
	<target name="compile-complexaddition" depends="init, build">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="${dir.tests}/fullprograms/complexaddition.cmp"/>
			<arg value="${dir.output}/complexaddition.ast"/>
			<arg value="${dir.output}/complexaddition.bin"/>
		</java>
	</target>

	<!-- Run compiler on example RunMe -->
	<target name="compile-runme" depends="init, build">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="${dir.tests}/fullprograms/runme.cmp"/>
			<arg value="${dir.output}/runme.ast"/>
			<arg value="${dir.output}/runme.bin"/>
		</java>
	</target>

	<!-- List example runme -->
	<target name="list-runme" depends="init">
		<java classname="runtime.VirtualMachine" classpathref="path-run">
			<arg value="-l"/>
			<arg value="${dir.output}/runme.bin"/>
		</java>
	</target>

	<!-- Run vm on example runme -->
	<target name="run-runme" depends="init">
		<java classname="runtime.VirtualMachine" classpathref="path-run">
			<arg value="${dir.output}/runme.bin"/>
		</java>
	</target>

</project>
